{"ast":null,"code":"var _jsxFileName = \"/home/fadlovich/Public/jsProjects/reactPros/saloodo-clientside/src/pages/SingleParcel.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SingleParcel = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const initialValues = {\n    pickedup_at: new Date(),\n    dropedoff_at: new Date()\n  };\n  const [formErrors, setFormErrors] = useState({});\n  const [isSubmitt, setIsSubmitt] = useState(false);\n  const [parcel, setParcel] = useState({});\n  const [pickedup_at, setPickedup_at] = useState(false);\n  const [dropedoff_at, setDropedoff_at] = useState(false);\n  const [dates, setDates] = useState(initialValues);\n  const [updated, setUpdated] = useState(false);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name == \"pickedup_at\") setPickedup_at(true);\n    if (name == \"dropedoff_at\") setDropedoff_at(true);\n    setDates({\n      ...dates,\n      [name]: value\n    });\n  };\n  useEffect(() => {\n    if (Object.keys(formErrors).length !== 0) {\n      setIsSubmitt(false);\n    }\n  }, [formErrors]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    setFormErrors(validateFormFields(dates));\n    setIsSubmitt(true);\n    if (isSubmitt) {\n      try {\n        updateParcel(id, dates).then(response => {\n          response.result == 1 ? setUpdated(true) : setUpdated(false);\n        });\n      } catch (error) {}\n    } else {\n      console.log(formErrors);\n    }\n  };\n  useEffect(() => {\n    fetchSingleParcel(id).then(response => {\n      setParcel(response);\n    }).catch(error => {\n      console.log(\"Error\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"SingleParcel\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n};\n_s(SingleParcel, \"TiJAUxugx4BZFdOMd/agUKI1yZI=\", true);\n_c = SingleParcel;\nexport default SingleParcel;\nvar _c;\n$RefreshReg$(_c, \"SingleParcel\");","map":{"version":3,"names":["SingleParcel","id","useParams","initialValues","pickedup_at","Date","dropedoff_at","formErrors","setFormErrors","useState","isSubmitt","setIsSubmitt","parcel","setParcel","setPickedup_at","setDropedoff_at","dates","setDates","updated","setUpdated","handleChange","e","name","value","target","useEffect","Object","keys","length","handleSubmit","preventDefault","validateFormFields","updateParcel","then","response","result","error","console","log","fetchSingleParcel","catch"],"sources":["/home/fadlovich/Public/jsProjects/reactPros/saloodo-clientside/src/pages/SingleParcel.js"],"sourcesContent":["const SingleParcel = () => {\n  const { id } = useParams();\n  const initialValues = {\n    pickedup_at: new Date(),\n    dropedoff_at: new Date(),\n  };\n  const [formErrors, setFormErrors] = useState({});\n  const [isSubmitt, setIsSubmitt] = useState(false);\n\n  const [parcel, setParcel] = useState({});\n  const [pickedup_at, setPickedup_at] = useState(false);\n  const [dropedoff_at, setDropedoff_at] = useState(false);\n  const [dates, setDates] = useState(initialValues);\n  const [updated, setUpdated] = useState(false);\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    if (name == \"pickedup_at\") setPickedup_at(true);\n    if (name == \"dropedoff_at\") setDropedoff_at(true);\n    setDates({ ...dates, [name]: value });\n  };\n  useEffect(() => {\n    if (Object.keys(formErrors).length !== 0) {\n      setIsSubmitt(false);\n    }\n  }, [formErrors]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setFormErrors(validateFormFields(dates));\n    setIsSubmitt(true);\n    if (isSubmitt) {\n      try {\n        updateParcel(id, dates).then((response) => {\n          response.result == 1 ? setUpdated(true) : setUpdated(false);\n        });\n      } catch (error) {}\n    } else {\n      console.log(formErrors);\n    }\n  };\n  useEffect(() => {\n    fetchSingleParcel(id)\n      .then((response) => {\n        setParcel(response);\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n      });\n  }, []);\n  return <div>SingleParcel</div>;\n};\n\nexport default SingleParcel;\n"],"mappings":";;;AAAA,MAAMA,YAAY,GAAG,MAAM;EAAA;EACzB,MAAM;IAAEC;EAAG,CAAC,GAAGC,SAAS,EAAE;EAC1B,MAAMC,aAAa,GAAG;IACpBC,WAAW,EAAE,IAAIC,IAAI,EAAE;IACvBC,YAAY,EAAE,IAAID,IAAI;EACxB,CAAC;EACD,MAAM,CAACE,UAAU,EAAEC,aAAa,CAAC,GAAGC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGF,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACL,WAAW,EAAEU,cAAc,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACH,YAAY,EAAES,eAAe,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAACN,aAAa,CAAC;EACjD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMW,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChC,IAAIF,IAAI,IAAI,aAAa,EAAER,cAAc,CAAC,IAAI,CAAC;IAC/C,IAAIQ,IAAI,IAAI,cAAc,EAAEP,eAAe,CAAC,IAAI,CAAC;IACjDE,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAE,CAACM,IAAI,GAAGC;IAAM,CAAC,CAAC;EACvC,CAAC;EACDE,SAAS,CAAC,MAAM;IACd,IAAIC,MAAM,CAACC,IAAI,CAACpB,UAAU,CAAC,CAACqB,MAAM,KAAK,CAAC,EAAE;MACxCjB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,CAACJ,UAAU,CAAC,CAAC;EAEhB,MAAMsB,YAAY,GAAIR,CAAC,IAAK;IAC1BA,CAAC,CAACS,cAAc,EAAE;IAClBtB,aAAa,CAACuB,kBAAkB,CAACf,KAAK,CAAC,CAAC;IACxCL,YAAY,CAAC,IAAI,CAAC;IAClB,IAAID,SAAS,EAAE;MACb,IAAI;QACFsB,YAAY,CAAC/B,EAAE,EAAEe,KAAK,CAAC,CAACiB,IAAI,CAAEC,QAAQ,IAAK;UACzCA,QAAQ,CAACC,MAAM,IAAI,CAAC,GAAGhB,UAAU,CAAC,IAAI,CAAC,GAAGA,UAAU,CAAC,KAAK,CAAC;QAC7D,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOiB,KAAK,EAAE,CAAC;IACnB,CAAC,MAAM;MACLC,OAAO,CAACC,GAAG,CAAC/B,UAAU,CAAC;IACzB;EACF,CAAC;EACDkB,SAAS,CAAC,MAAM;IACdc,iBAAiB,CAACtC,EAAE,CAAC,CAClBgC,IAAI,CAAEC,QAAQ,IAAK;MAClBrB,SAAS,CAACqB,QAAQ,CAAC;IACrB,CAAC,CAAC,CACDM,KAAK,CAAEJ,KAAK,IAAK;MAChBC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;IAC7B,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN,oBAAO;IAAA,UAAK;EAAY;IAAA;IAAA;IAAA;EAAA,QAAM;AAChC,CAAC;AAAC,GAlDIpC,YAAY;AAAA,KAAZA,YAAY;AAoDlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}