{"ast":null,"code":"// Validate From Fields\nexport const validateFormFields = values => {\n  const errors = {};\n  const mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  if (values.name.length < 3) {\n    errors.name = \"Name Must be at least 3 characters\";\n  }\n  if (!values.name) {\n    errors.name = \"Name is required\";\n  }\n  if (!values.email.match(mailformat)) {\n    errors.email = \"Invalid Email Address\";\n  }\n  if (!values.email) {\n    errors.email = \"Email is required\";\n  }\n  if (!values.phone_number) {\n    errors.phone_number = \"Phone Number is required\";\n  }\n  if (values.password.length < 6) {\n    errors.password = \"Password Must be at least 6 characters long\";\n  }\n  if (!values.password) {\n    errors.password = \"Password is required\";\n  }\n  return errors;\n};\nexport default validateFormFields;","map":{"version":3,"names":["validateFormFields","values","errors","mailformat","name","length","email","match","phone_number","password"],"sources":["/home/fadlovich/Public/jsProjects/reactPros/saloodo-clientside/src/Validations/registerValidator.js"],"sourcesContent":["// Validate From Fields\nexport const validateFormFields = (values) => {\n  const errors = {};\n  const mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n  if (values.name.length < 3) {\n    errors.name = \"Name Must be at least 3 characters\";\n  }\n  if (!values.name) {\n    errors.name = \"Name is required\";\n  }\n  if (!values.email.match(mailformat)) {\n    errors.email = \"Invalid Email Address\";\n  }\n  if (!values.email) {\n    errors.email = \"Email is required\";\n  }\n  if (!values.phone_number) {\n    errors.phone_number = \"Phone Number is required\";\n  }\n  if (values.password.length < 6) {\n    errors.password = \"Password Must be at least 6 characters long\";\n  }\n  if (!values.password) {\n    errors.password = \"Password is required\";\n  }\n\n  return errors;\n};\n\nexport default validateFormFields;\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,kBAAkB,GAAIC,MAAM,IAAK;EAC5C,MAAMC,MAAM,GAAG,CAAC,CAAC;EACjB,MAAMC,UAAU,GAAG,+CAA+C;EAElE,IAAIF,MAAM,CAACG,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;IAC1BH,MAAM,CAACE,IAAI,GAAG,oCAAoC;EACpD;EACA,IAAI,CAACH,MAAM,CAACG,IAAI,EAAE;IAChBF,MAAM,CAACE,IAAI,GAAG,kBAAkB;EAClC;EACA,IAAI,CAACH,MAAM,CAACK,KAAK,CAACC,KAAK,CAACJ,UAAU,CAAC,EAAE;IACnCD,MAAM,CAACI,KAAK,GAAG,uBAAuB;EACxC;EACA,IAAI,CAACL,MAAM,CAACK,KAAK,EAAE;IACjBJ,MAAM,CAACI,KAAK,GAAG,mBAAmB;EACpC;EACA,IAAI,CAACL,MAAM,CAACO,YAAY,EAAE;IACxBN,MAAM,CAACM,YAAY,GAAG,0BAA0B;EAClD;EACA,IAAIP,MAAM,CAACQ,QAAQ,CAACJ,MAAM,GAAG,CAAC,EAAE;IAC9BH,MAAM,CAACO,QAAQ,GAAG,6CAA6C;EACjE;EACA,IAAI,CAACR,MAAM,CAACQ,QAAQ,EAAE;IACpBP,MAAM,CAACO,QAAQ,GAAG,sBAAsB;EAC1C;EAEA,OAAOP,MAAM;AACf,CAAC;AAED,eAAeF,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}